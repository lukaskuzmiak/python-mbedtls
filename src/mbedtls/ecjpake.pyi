# SPDX-License-Identifier: MIT
# Copyright (c) 2022, Lukas Kuzmiak

import enum


@enum.unique
class ECJPakeRole(enum.IntEnum):
    CLIENT: ...
    SERVER: ...


@enum.unique
class ECPGroupId(enum.IntEnum):
    NONE: ...
    SECP192R1: ...
    SECP224R1: ...
    SECP256R1: ...
    SECP384R1: ...
    SECP521R1: ...
    BP256R1: ...
    BP384R1: ...
    BP512R1: ...
    CURVE25519: ...
    SECP192K1: ...
    SECP224K1: ...
    SECP256K1: ...
    CURVE448: ...

@enum.unique
class MDType(enum.IntEnum):
    MBEDTLS_MD_NONE: ...
    MBEDTLS_MD_MD5: ...
    MBEDTLS_MD_SHA1: ...
    MBEDTLS_MD_SHA224: ...
    MBEDTLS_MD_SHA256: ...
    MBEDTLS_MD_SHA384: ...
    MBEDTLS_MD_SHA512: ...
    MBEDTLS_MD_RIPEMD160: ...

class ECJPake:
    def __init__(self) -> None: ...

    def setup(self, role: ECJPakeRole, hash: MDType, curve: ECPGroupId, secret: bytes) -> None: ...

    def check(self) -> None: ...

    def write_round_one(self) -> bytes: ...

    def read_round_one(self, buffer: bytes) -> None: ...

    def write_round_two(self) -> bytes: ...

    def read_round_two(self, buffer: bytes) -> None: ...

    def derive_secret(self) -> bytes: ...

    def self_test(self, verbose: bool) -> None: ...
